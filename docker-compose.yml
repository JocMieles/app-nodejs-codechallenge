version: '3.7'

services:
  app:
    build:
      context: ./challenge   # Ruta a la carpeta donde est√° el Dockerfile
      dockerfile: Dockerfile # Nombre del Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      PGSQL_HOST: postgres
      PGSQL_PORT: 5432
      PGSQL_USERNAME: postgres
      PGSQL_PASSWORD: postgres
      PGSQL_DATABASE: postgres
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_GROUP_FRAUD: anti_fraud
      KAFKA_GROUP_TRAN: transaction_created

  postgres:
    image: postgres:14
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 40s
      timeout: 20s
      retries: 3 

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-broker-api-versions --bootstrap-server=localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"